import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as c,c as i,d as t,e,a as n,b as s}from"./app-NMDMw9XN.js";const l={},r=e('<h1 id="target-different-net-versions-in-test-projects" tabindex="-1"><a class="header-anchor" href="#target-different-net-versions-in-test-projects"><span>Target Different .Net Versions in Test Projects</span></a></h1><p>This document explains how to target different .Net versions in test projects. It mainly focuses on the <code>net48</code> and <code>net8</code> frameworks.</p><h2 id="net48-test-projects" tabindex="-1"><a class="header-anchor" href="#net48-test-projects"><span>Net48 Test Projects</span></a></h2><p>The <code>net48</code> test projects <strong>cannot</strong> reference <code>net8</code> class libraries. The only way to do that, would be to convert the old project format to <code>Microsoft.Net.Sdk</code> format and target multiple frameworks. See <a href="#multi-target-tests-projects">Multi Target Test Projects</a>.</p>',4),u=e('<h2 id="net8-test-projects" tabindex="-1"><a class="header-anchor" href="#net8-test-projects"><span>Net8 Test Projects</span></a></h2><p>The <code>net8</code> test projects <strong>can</strong> reference <code>net48</code>, <code>netstandard</code> and <code>net8</code> class libraries without any other adjustments.</p>',2),d=n("h2",{id:"multi-target-test-projects",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#multi-target-test-projects"},[n("span",null,"Multi-Target Test Projects")])],-1),k=n("p",null,[s("A project that has the "),n("code",null,"Microsoft.Net.Sdk"),s(" format for its "),n("code",null,"*.csproj"),s(" file can target multiple frameworks. In the diagram and code snippets below, it is illustrated how we can multi-target "),n("code",null,"net481"),s(" and "),n("code",null,"net8.0"),s(".")],-1),m=e(`<ul><li>Change the <code>*.csproj</code> as below in order to target <code>net8.0</code> and <code>net481</code> frameworks.</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- *.csproj --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TargetFrameworks</span><span class="token punctuation">&gt;</span></span>net8.0;net481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TargetFrameworks</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>

...

<span class="token comment">&lt;!-- conditionaly target the net481 project --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&#39;</span>$(TargetFramework)&#39; == &#39;net481&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>..\\Net48Client\\Net48Client.csproj<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- conditionaly target the net8.0 project --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&#39;</span>$(TargetFramework)&#39; == &#39;net8.0&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>..\\Net8Client\\Net8Client.csproj<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Change the unit tests classes as below in order to run the corresponding code for the targeted framework, considering this: <ul><li>The <code>using</code> statement <strong>needs</strong> compiler directive</li><li>The <code>netstandard</code> code <strong>does not need</strong> any compiler directive</li><li>The <code>net481</code> and <code>net8</code> code <strong>needs</strong> compiler directive</li></ul></li></ul><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// The using section needs directives</span>
<span class="token preprocessor property">#<span class="token directive keyword">if</span> !NETFRAMEWORK</span>
<span class="token keyword">using</span> <span class="token namespace">Net8Client</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">else</span></span>
<span class="token keyword">using</span> <span class="token namespace">Net48Client</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>

<span class="token keyword">namespace</span> <span class="token namespace">NetMultiTargetTests</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">TestClass</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NetCalculatorTests</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Method that runs with netstandard doesn&#39;t need any directive</span>
    <span class="token punctuation">[</span>TestMethod<span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">NetStandard20SumTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NetStandard20Calculator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token comment">// Methods that run with net8 needs directive</span>
<span class="token preprocessor property">#<span class="token directive keyword">if</span> !NETFRAMEWORK</span>

    <span class="token punctuation">[</span>TestMethod<span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Net8SumTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Net8Calculator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">// Methods that run with net48 needs directive</span>
<span class="token preprocessor property">#<span class="token directive keyword">else</span></span>

    <span class="token punctuation">[</span>TestMethod<span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Net48SumTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Net48Calculator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function v(g,b){const a=p("Mermaid");return c(),i("div",null,[r,t(a,{id:"mermaid-12",code:"eJxLy8kvT85ILCpR8AniUlDISy0xsYgvSS0uKdYAsxXAbE0FXV07iCSqIph4cUliXkpiUUp8ck5mal4JhiKFvPwShYL84uLMpJxUmCYLLqC64pJKoAiIB9WrkJaZk2NVlJqiU1xSlJ+daqVsbGwMZeuWZ6aUZFgZFlRwAQAtvT2P"}),u,t(a,{id:"mermaid-19",code:"eJxLy8kvT85ILCpR8AniUlDISy2xiC9JLS4p1gAyTSwUwGxNBV1dO5CciQWKGphwcUliXkpiUQpWSQsuAIKfIE0="}),d,k,t(a,{id:"mermaid-26",code:"eJxLy8kvT85ILCpR8AniUlAoLk1KL0osyFDIyy+Jz0stSStKzE0tzy/KVohWiAXKKygABYtLEvNSEotSYHwLICM1D8TNLc0pydQACplY6IBlFEpSi0uKNRV0dRWUM9MU/FxD3IIcfV3D/YO8gWJ2IDUmIO1gjTBVipjK0FzDBQDpeTiZ"}),m])}const y=o(l,[["render",v],["__file","multi-target.html.vue"]]),w=JSON.parse('{"path":"/articles/multi-target.html","title":"Target Different .Net Versions in Test Projects","lang":"en-US","frontmatter":{"date":"2024-02-04T00:00:00.000Z","category":["programming"],"order":3,"tag":["dotnet"]},"headers":[{"level":2,"title":"Net48 Test Projects","slug":"net48-test-projects","link":"#net48-test-projects","children":[]},{"level":2,"title":"Net8 Test Projects","slug":"net8-test-projects","link":"#net8-test-projects","children":[]},{"level":2,"title":"Multi-Target Test Projects","slug":"multi-target-test-projects","link":"#multi-target-test-projects","children":[]}],"git":{"createdTime":1707217217000,"updatedTime":1707217217000,"contributors":[{"name":"Dorin Andrei Dragan","email":"dorin.andrei.dragan@gmail.com","commits":1}]},"readingTime":{"minutes":1.24,"words":372},"filePathRelative":"articles/multi-target.md","localizedDate":"February 4, 2024"}');export{y as comp,w as data};
